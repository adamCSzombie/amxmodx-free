/* Plugin generated by AMXX-Studio */

#include < amxmodx >
#include < fakemeta >
#include < hamsandwich >
#include < zombieplague >
#include < fun >
#include < cstrike >

new const zclass_name[ ] = 	"Healer Zombie" ;
new const zclass_info[ ] = 	"[regeneruje zombiekov]" ;
new const zclass_model[ ] = 	"bz_healer" ;
new const zclass_clawmodel[ ] = 	"v_knife_healer.mdl" ;
const zclass_health = 1200; 			// 1700
const zclass_speed = 245;			// 240
const Float:zclass_gravity = 0.8;
const Float:zclass_knockback = 0.0;

new gSpr_regeneration;

#define PLUGIN 		"[ZP-Class] Healer Zombie"
#define VERSION 	"1.3"
#define AUTHOR 		"adamCSzombie"

new g_medic, g_have_healing[ 33 ], g_MsgSync;

public plugin_init( ) {
	register_plugin( PLUGIN, VERSION, AUTHOR );
	register_event( "CurWeapon" , "fw_EvEECurWeapon" , "be" , "1=1" );
	register_forward(FM_PlayerPreThink, "FM_PreThink" )
	RegisterHam(Ham_Killed, "player", "Hrac_Umrel", 1 )
	g_MsgSync = CreateHudSyncObj( );
}

public Hrac_Umrel( victim, attacker, shouldgibc ) {
	if( g_have_healing[ victim ] ) {
		g_have_healing[ victim ] = false;
	}
}

public plugin_precache( ) {
	gSpr_regeneration = precache_model( "sprites/en_heal.spr" );
	g_medic = zp_register_zombie_class( zclass_name, zclass_info, zclass_model, zclass_clawmodel, zclass_health, zclass_speed, zclass_gravity, zclass_knockback );
}

public zp_user_infected_post( id, infector ) {
	if( zp_get_user_zombie_class( id ) == g_medic ) {
		ChatColor( id, "!t[HEALER ZOMBIE]!y Ked zamieris na spoluhraca budes ho ozivovat!" );
	}
}

public fw_EvEECurWeapon( id ) {
	if( zp_get_user_first_zombie( id ) ) {
		if( zp_get_user_zombie_class( id ) ==  g_medic ) {
			new g_iPrevCurWeapon[ 33 ];
			new iCurWeapon = read_data( 3 )
			if( iCurWeapon != g_iPrevCurWeapon[ id ] ) {
				set_user_maxspeed( id , 300.0 );
				g_iPrevCurWeapon[ id ] = iCurWeapon;
			}
		}
	}
}

player_healingEffect( id ) {
	new Float:Origin[ 3 ];
	pev( id, pev_origin, Origin )
	
	Origin[ 2 ] = Origin[ 2 ] + 20.0;
	
	message_begin( MSG_BROADCAST, SVC_TEMPENTITY );
	write_byte( TE_SPRITE );
	engfunc( EngFunc_WriteCoord, Origin[ 0 ] );
	engfunc( EngFunc_WriteCoord, Origin[ 1 ] );
	engfunc( EngFunc_WriteCoord, Origin[ 2 ] );
	write_short( gSpr_regeneration ); 
	write_byte( 0 );
	write_byte( 200 );
	message_end( );
}

stock ScreenFade( plr, Float:fDuration, red, green, blue, alpha ) {
	new i = plr ? plr : get_maxplayers();
	if( !i ) {
		return 0;
	}
	
	message_begin( plr ? MSG_ONE : MSG_ALL, get_user_msgid( "ScreenFade" ), {0, 0, 0}, plr );
	write_short( floatround( 4096.0 * fDuration, floatround_round ) );
	write_short( floatround( 4096.0 * fDuration, floatround_round ) );
	write_short( 4096 );
	write_byte( red );
	write_byte( green );
	write_byte( blue );
	write_byte( alpha );
	message_end( );
	
	return 1;
	
}

stock ChatColor( const id, const input[ ], any:... ) {
	new count = 1, players[ 32 ];
	static msg[ 191 ];
	vformat( msg, 190, input, 3 );
   
	replace_all( msg, 190, "!g", "^4" );
	replace_all( msg, 190, "!y", "^1" );
	replace_all( msg, 190, "!t", "^3" );

   
	if( id ) players[ 0 ] = id; else get_players( players, count, "ch" )
	{
		for(new i = 0; i < count; i++)
		{
			if( is_user_connected( players[ i ] ) )
			{
				message_begin( MSG_ONE_UNRELIABLE, get_user_msgid("SayText"), _, players[ i ] );
				write_byte( players[ i ] );
				write_string( msg );
				message_end( );
			}
		}
	}
}

public client_disconnect( id ) {
	g_have_healing[ id ] = false;
}

public FM_PreThink( id ) {
	if( !zp_get_user_zombie( id ) )
		return PLUGIN_HANDLED;
	new idAiming, iBodyPart;
	get_user_aiming( id, idAiming, iBodyPart );
	if( is_user_alive( idAiming ) && is_user_alive( id ) ) {
		if( cs_get_user_team( id ) == CS_TEAM_T && cs_get_user_team( idAiming ) == CS_TEAM_T ) {
			if( zp_get_user_zombie_class( id ) == g_medic ) {
				if( !g_have_healing[ idAiming ] ) {
					new message[ 200 ];
					g_have_healing[ idAiming ] = true;
					player_healingEffect( idAiming );
					player_healingEffect( id );
					ScreenFade( idAiming, 2.0, 65, 165, 65, 100 );
					ScreenFade( id, 0.2, 65, 165, 65, 100 );
					client_print( id, print_center, "Uspesne si ozivil hraca!" );
					client_print( idAiming, print_center, "+400 HP!" );
					client_cmd( idAiming, "spk items/smallmedkit1.wav" );
					ChatColor( idAiming, "!g[HEALER ZOMBIE]!y Spoluhrac ta ozivil o !t400 HP!y!" );
					ChatColor( id, "!g[HEALER ZOMBIE]!y Za ozivenie spoluhraca si ziskal !t100 HP!y" );
					set_user_health( id, get_user_health( id ) + 100 );
					set_user_health( idAiming, get_user_health( idAiming ) + 400 );
					set_hudmessage( 65, 165, 65, -1.0, 0.75, 0, 0.1, 0.1, 0.1, 0.1 );
					format( message, 199, "Zacal si ozivovat tohto hraca!" );
					ShowSyncHudMsg( id, g_MsgSync, message );
				} else {
					new message[ 200 ];
					set_hudmessage( 65, 165, 65, -1.0, 0.75, 0, 0.1, 0.1, 0.1, 0.1 );
					format( message, 199, "TENTO HRAC UZ BOL RAZ VYLIECENY!" );
					ShowSyncHudMsg( id, g_MsgSync, message );
				}		
			}
		}    
	}
	return PLUGIN_HANDLED;
}
